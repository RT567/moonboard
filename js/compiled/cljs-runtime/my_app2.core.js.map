{"version":3,"sources":["my_app2/core.cljs"],"mappings":";AAUA,yBAAA,zBAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,0BAAA,1BAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,iCAAkBJ;;AAEpC,oBAAA,pBAAMK;AAAN,AACE,4BAAA,mFAAA,/GAACC;;AACD,AAACX;;AACD,OAACG","names":["my-app2.core/dev-setup","my-app2.config/debug?","cljs.core.println","my-app2.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","my-app2.views/main-panel","my-app2.core/init","re-frame.core/dispatch-sync"],"sourcesContent":["(ns my-app2.core\r\n  (:require\r\n   [reagent.dom :as rdom]\r\n   [re-frame.core :as re-frame]\r\n   [my-app2.events :as events]\r\n   [my-app2.views :as views]\r\n   [my-app2.config :as config]\r\n   ))\r\n\r\n\r\n(defn dev-setup []\r\n  (when config/debug?\r\n    (println \"dev mode\")))\r\n\r\n(defn ^:dev/after-load mount-root []\r\n  (re-frame/clear-subscription-cache!)\r\n  (let [root-el (.getElementById js/document \"app\")]\r\n    (rdom/unmount-component-at-node root-el)\r\n    (rdom/render [views/main-panel] root-el)))\r\n\r\n(defn init []\r\n  (re-frame/dispatch-sync [::events/initialize-db])\r\n  (dev-setup)\r\n  (mount-root))\r\n"]}